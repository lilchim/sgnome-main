name: Version and Build

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '18'

jobs:
  version-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for version calculation
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: src/Sgnome.Frontend/package-lock.json
    
    - name: Calculate version
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          # Use tag version (e.g., v1.2.3 -> 1.2.3)
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          # Use semantic versioning with commit count
          VERSION="0.1.0-${{ github.run_number }}"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Calculated version: $VERSION"
    
    - name: Update .NET version
      run: |
        # Update Directory.Build.props
        sed -i "s/<Version>.*<\/Version>/<Version>${{ steps.version.outputs.version }}<\/Version>/g" Directory.Build.props
        sed -i "s/<AssemblyVersion>.*<\/AssemblyVersion>/<AssemblyVersion>${{ steps.version.outputs.version }}.0<\/AssemblyVersion>/g" Directory.Build.props
        sed -i "s/<FileVersion>.*<\/FileVersion>/<FileVersion>${{ steps.version.outputs.version }}.0<\/FileVersion>/g" Directory.Build.props
        echo "Updated .NET version to ${{ steps.version.outputs.version }}"
    
    - name: Update frontend version
      run: |
        cd src/Sgnome.Frontend
        npm version ${{ steps.version.outputs.version }} --no-git-tag-version
        echo "Updated frontend version to ${{ steps.version.outputs.version }}"
    
    - name: Install frontend dependencies
      run: |
        cd src/Sgnome.Frontend
        npm ci
    
    - name: Build frontend
      run: |
        cd src/Sgnome.Frontend
        npm run build
    
    - name: Build .NET projects
      run: |
        dotnet restore
        dotnet build --no-restore --configuration Release
    
    - name: Run tests
      run: |
        dotnet test --no-build --verbosity normal --configuration Release
    
    - name: Build Docker image
      run: |
        docker build -f docker/Dockerfile \
          --build-arg VERSION=${{ steps.version.outputs.version }} \
          -t sgnome-web:${{ steps.version.outputs.version }} \
          -t sgnome-web:latest .
    
    - name: Push Docker image (on tags)
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker tag sgnome-web:${{ steps.version.outputs.version }} lilchim/sgnome-web:${{ steps.version.outputs.version }}
        docker tag sgnome-web:latest lilchim/sgnome-web:latest
        docker push lilchim/sgnome-web:${{ steps.version.outputs.version }}
        docker push lilchim/sgnome-web:latest 